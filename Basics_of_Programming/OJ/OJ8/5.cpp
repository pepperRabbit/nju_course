#include <iostream>
using namespace std;

/*
题目：正规括号顺序

题目描述：

描述：
一个括号顺序，如果可以通过插入‘+’和‘1’使它变成一个有算术意义的表达式，那么我们说它是正规的。

例如，"(())()"，"()"，"(()(()))"都是正规的括号顺序。而)(，(()，(()))(则不是。

给你一个非空的括号序列，你可以移除其中某些括号来使整个序列成为正规括号序列，那么能得到的最长的括号序列能有多长？

输入：
由'(' 和 ")"组成的非空串，长度不超过10^6

输出：
移除其中某些括号得到的最大的正规括号序列的可能长度

样例1：
输入：

)(()(

输出：

2

样例2：
输入：

))))))(

输出：

0

样例3：
输入：

()()(()(((

输出：

6

样例4：
输入：

())))((()())())))))())

输出：

14

样例5：
输入：

()))(()((((()(())

输出：

10*/

int main() {
	string s;
	cin >> s;
	int len = s.length(), maxcnt = 0, i = 0, left = 0, cnt = 0;
	while (i < len) {
		if (s[i] == '(') {
			left++;
		}
		else {
			left--;
			if (left < 0) {
				left = 0;
			}
			else maxcnt += 2;
		}
		i++;
	}
	cout << maxcnt << endl;
	return 0;
}